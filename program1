import java.util.*;

class Card {
    private String symbol;
    private String value;

    public Card(String symbol, String value) {
        this.symbol = symbol;
        this.value = value;
    }

    public String getSymbol() {
        return symbol;
    }

    public String getValue() {
        return value;
    }

    @Override
    public String toString() {
        return "[" + value + " of " + symbol + "]";
    }
}

class CardCollection {
    private Collection<Card> cards;

    public CardCollection() {
        cards = new ArrayList<>();
    }

    public void addCard(Card card) {
        cards.add(card);
    }

    public List<Card> getCardsBySymbol(String symbol) {
        List<Card> result = new ArrayList<>();
        for (Card card : cards) {
            if (card.getSymbol().equalsIgnoreCase(symbol)) {
                result.add(card);
            }
        }
        return result;
    }

    public void displayAllCards() {
        for (Card card : cards) {
            System.out.println(card);
        }
    }
}

public class Main {
    public static void main(String[] args) {
        CardCollection collection = new CardCollection();

        collection.addCard(new Card("Hearts", "Ace"));
        collection.addCard(new Card("Spades", "King"));
        collection.addCard(new Card("Diamonds", "Queen"));
        collection.addCard(new Card("Hearts", "10"));
        collection.addCard(new Card("Clubs", "Jack"));

        System.out.println("All Cards in Collection:");
        collection.displayAllCards();

        String symbolToFind = "Hearts";
        System.out.println("\nSearching for symbol: " + symbolToFind);

        List<Card> foundCards = collection.getCardsBySymbol(symbolToFind);
        if (foundCards.isEmpty()) {
            System.out.println("No cards found for the symbol: " + symbolToFind);
        } else {
            System.out.println("Cards found:");
            for (Card card : foundCards) {
                System.out.println(card);
            }
        }
    }
}
